{"pageProps":{"frontmatter":{"slug":"/blog/2020-05-23_Sonoff-Basic-R3-------------------f5498b92027b","date":"Sat, 23 May 2020 21:14:59 GMT","title":"Sonoff Basic R3でセキュアなスマートホームを構築する","epoch":"1590268499","excerpt":"我が家でもようやく手元のスマホでベッドサイドのランプを消せるようになりました。"},"markdownBody":"\n我が家でもようやく手元のスマホでベッドサイドのランプを消せるようになりました。\n\n### ホモ・サピエンスになりたい\n\n我が家のベッドサイドにはIKEAのKvart(3 heads)というフロアランプを置いているのだが、これが首ごとにスイッチがあってしかも1つ1つが暗いので常に3つつけるせいで、寝る前に手を伸ばして3つのスイッチを切るのがうっとうしくて仕方ない。うっとうしくて仕方ないと言いつつ5年間毎日やっていたので、実はうっとうしくないのかもしれない。\n\n![IKEA Kvart floor lamp](/images/0*-6XxE5q1W_65wZ1C.jpg)\n\nしかし先日[Rebuild.fm (ep.246](http://rebuild.fm/264/) を聞いていた)ら、手で電気を消すなんて原始人かと（ポッドキャスト越しに）言われたことと、Work from homeで少し時間と体力に余裕があるので、重い腰をあげてスマートホーム（）に挑戦することにした。目標は、このフロアランプの3つのスイッチすべてをスマホでOn/Offできるようにすること。当然ながら簡単なのは、適当なスマートプラグを買って壁のアウトレットに刺して、ランプのコードをそのスマートプラグに刺すことだろう。でもなあ。\n\n### Arduinoで自作しようかな\n\nただランプの電源をOn/Offするだけ、ボイスコントロールも不要、IFTTTもAlexaも外出先からの操作も一切不要。むしろ、これらの機能は付いていて欲しくない。プラグとスマホが同じ空間にある前提で、スマホからプラグにコマンドを送る機能だけが欲しい。プラグからインターネットに出て行って欲しくない。代わりに何らかのAPIが欲しい。謎のうんちゃらCloudに登録とかしたくない。うんちゃらCloudから我が家の電気系統にアクセスなんてして欲しくない。\n\nという条件からまず考えたのが、Arduinoを使ってBluetoothでコントロールできるプラグを自作すること。その手の電気工事関連の資格は一切持っていないし、小学生のときに電子工作が流行ってはんだ付けはできないこともない、くらいのスキルセットだが、まあYouTubeでどうにかなるのでは。\n\n調べてみると、電源を入れたり切ったりするにはリレーという部品を使うらしい（その程度の知識もありませんでしたよ）。高ボルテージの電気を扱うのは危険だよねってことで、[IoT Relayなる製品](https://www.sparkfun.com/products/14236)もあることを発見。\n\n![Sparkfun IoT Relay](/images/0*XEb_J-JCb0nuY-3G.jpg)\n\n$30弱か…。これにArduino UnoとBluetoothモジュールをつけて、うーん随分かかるなあ。面白そうではあるけども、この4口もあるタップをただランプのOn/Offのためだけに買うのもバカバカしい。\n\n普通のArduinoで使えるリレーモジュールなら$5くらいで買えるので、それの使い方を調べてみた。見つけたのが[Arduinoで家電を操作しようというタイトルのこの記事](https://www.circuitbasics.com/build-an-arduino-controlled-power-outlet/)。何と電源タップのコードをちょん切って、電気が通る線をリレーにつないでいる。なるほど、これでリレーについているI/Oピンへ信号を送ることで電気を通したり通さなかったりできるということか。こりゃあ面白そう。\n\n![Cut the wire](/images/0*_eVKi14W8beaQ_YN.jpg)\n\n電源コードを切って出てくる3本のワイヤーがそれぞれ何で、どれがどれかをどうやって調べるのか、などなどを調べて机上の空論的な自信をつけたので、パーツをAmazonのカートに入れてみる。うーん、Arduino Unoとブレッドボードとワイヤーと、それに電源コードと交換用アウトレットなどを一通り揃えるとやっぱりそれなりの値段になるよね。あと、Arduino UnoとBluetoothモジュールを買って、それをベッドサイドに固定してランプのOn/Offのためだけに使うのってやっぱり無駄なんじゃないかなあ。\n\n### Sonoff Basic R3\n\nArduino経由じゃなくて、本体にHTTPサーバーか何か入っていてAPIで操作できるスマートプラグはないのか、検索してみた。Belkinの製品にAPIがあるらしいんだけども、やっぱり外部のサイトに登録とかすることになる。それはやりたくない。\n\nもう少し探して、[Sonoff](https://sonoff.tech/)に行き着いた。どうも主にEU向けに製品を作っているみたいだが、USで使っている人もいるみたい。[OSSのファームウェアを焼けばHTTPで操作できる](https://github.com/arendst/Tasmota)という情報があってドキュメントを見に行ったら、最新の[R3](https://sonoff.tech/product/wifi-diy-smart-switches/basicr3)では[DIYモードがあらかじめ入っていて、HTTPで操作できる](http://developers.sonoff.tech/sonoff-diy-mode-api-protocol.html)こと、[DIYモードにすると公式アプリからすら接続できなくなり、APIでしか操作できないらしい](https://notenoughtech.com/featured/sonoff-r3-diy-mode/)ことを発見した。これはスマートプラグではないが、求めていたのはこれじゃないか？\n\n![Sonoff Basic (https://www.electroschematics.com/sonoff-basic-wi-fi-switch/)](/images/1*pyH9Mh1_WMal12XwjvJ1nA.png)\n\nSonoff BasicはどうやらWifiチップとリレーがつながっているだけのボードで、Arduinoとリレーを使うときのような要領で電源コードの中間にこいつを挟むように配線すれば、あとはWifiで電気をOn/Offできるということらしい。GNDを配線する場所がないのもUS向けではないためなのか、ちょっと不安になるんだけども、YouTubeを見ても多分アメリカの人が使っているし、大丈夫だと信じる。こいつにすれば、これ1つ($10)と電源延長コード($5)だけ用意すればおしまいなので、早速Amazonで注文した。[Sonoff Basic R3自体は1つ$5くらい](https://www.itead.cc/sonoff-basicr3-wifi-diy-smart-switch.html)だし、延長コードなんて$1くらいで買えるものだけども、送料を入れればこんなもんだろう。\n\n### Cut the wire\n\nSonoff Basic R3につなぐので、あえてアースのない2 prongの延長コードを買った。アースはアースでSonoff Basic R3の外でつないでしまえばいいんだけども、考えたくなかったので。さあぶった切るぞ。\n\n![ラジオペンチで切る](/images/1*k9_0GznkTEHg0Dvg2I8pWw.png)\n\n![切れた](/images/1*CrjsC8gLN4DR9Ok1yt5yQg.png)\n\nワイヤーストリッパーもないので、引き続きラジオペンチでガワをむく。\n\n![力の込め具合を調節して](/images/1*5eqBKdZmEb4shffqKiQ0PA.png)\n\n![ワイヤーむけた](/images/1*yA4kwVtGmXmaaCkx-dO4ww.png)\n\n### Sonoff Basic R3に接続\n\n切った両端でガワをむいたら、Sonoff Basic R3のターミナルに接続する。ターミナルにはそれぞれNとLがあって、ニュートラルをNに、電線をLにつなぐ。2本の線のどっちがニュートラルかは、[byte sizedのYouTube動画で教えてくれた](https://youtu.be/lRCH67wfwNE?t=140)。USでは、極性のあるプラグ（2つのプラグで大きさが異なる）では大きいプラグの方がニュートラル。さらにニュートラルの方には、コードの外側にギザが付けられている、とのこと。見てみると確かにコードにギザが付いている方が大きな方のプラグの側になっている。\n\n![両端をSonoff Basicのターミナルへ](/images/1*m9_ppljWMni3YcY44niXmg.png)\n\nSonoffのホームページにも書いてあるし上の写真では外してあるカバーにも書いてある通り、両端ともターミナルの上の方がNで下がLになっている。コードのギザを確認して、ワイヤーを突っ込みネジを締める。\n\n![このコードの外側のギザは反対側にはないので、こっちがニュートラル](/images/1*v-7SPSMANi3VKyBwVLRxXg.png)\n\n付属品のコードを押さえるカバーを付けて、化粧カバーをつければ完成。ニュートラルと電線を間違えないようになんども確認した。\n\n![ギザのある方がNにつながっている](/images/1*00BdgcE11ByYJHj2rGSgoQ.png)\n\n![こちらもギザのある方がNにつながっている](/images/1*TNSZNsAw0LaQ14Hqbq5fLA.png)\n\n![完成した延長コード](/images/1*tHwsW0QBTwtlnCfYBIbNbw.png)\n\n### ファームウェアを更新\n\nまずはDIYモードの前に最新のファームウェアに更新する。Sonoff BasicはR3が出るまでは公式DIYモードはなくて、[内部で使われているWifiチップ用のファームウェア](https://tasmota.github.io/docs/)を焼いて遊ぶのが一般的だったらしい。\n\nR3でSonoffが公式DIYモードを用意したんだが、最初のバージョンでは本体の内部カバーも開けて中にあるピンにジャンパーをはめてDIYモードにする方式で、さらにDIYモードになったR3はあらかじめ設定されている名前のSSIDのWifiへ接続しようとするので、こちらでその名前のアクセスポイントを立てて、接続させて、それからいろいろ操作するという手順だったらしく、[R3のDIYモードなんか使い物にならん](https://notenoughtech.com/featured/sonoff-r3-diy-mode/)的な投稿が多い。\n\nSonoffはその辺敏感に反応して、現在のDIYモードはジャンパーもいらないし、R3のハードウェアスイッチを長押しするだけでDIYモードに入って、あとはR3に直接アドホック接続して設定をすれば良くなっているので、簡単になった。ただそのバージョンのファームウェアが入っているかどうかわからないので、とりあえずはファームウェアの更新をするという話。\n\nR3を電源に接続するとQuick Setupモードになるので、あらかじめダウンロードしておいた[eWelinkアプリ](https://play.google.com/store/apps/details?id=com.coolkit&amp;hl=en)でデバイスを検出して、SSIDやパスワードを設定してR3を自宅の無線ルーターに接続する。ファームウェアの更新もアプリでできる。本稿執筆時点では3.5.0が入った。\n\n### Let’s DIYモード\n\nファームウェアを更新したらいよいよDIYモードである。まずはR3に付いているハードウェアボタンを長押しして、青いランプを点滅させる（5秒くらい）。規則正しい点滅と、短・短・長の点滅の2種類があるので規則正しい方にする。\n\n![DIYモード](/images/1*6gUE3c7zBU9ochjTPin4Kg.gif)\n\nこのときR3は**ITEAD_xxxx**という名前のSSID（**xxxx**部分はブツによって異なる）でアドホックWifiを作っているので、それに接続して（パスワードは[Sonoffの開発者向けページ](http://developers.sonoff.tech/sonoff-diy-mode-api-protocol.html)に書いてある）、ブラウザーで**http://10.10.7.1**にアクセスする。そこで自宅のWifiのSSIDとパスワードを設定できる（11acとかの5Ghzには対応していない）。設定したらR3は再起動し、うまくいけば自宅のWifiネットワークに接続する。自宅Wifiのルーターの管理画面に行けばIPアドレスはわかるだろう。\n\n### WiresharkでmDNSの中身をみる\n\nあとはAPIドキュメントに沿って、curlでIPにむけてPOSTでも送ってやればいいんだろう…と思ったらそうでもなかった。IPとポート（デフォルトのポートも[Sonoffの開発者向けページ](http://developers.sonoff.tech/sonoff-diy-mode-api-protocol.html)に書いてある）が分かっても、R3のデバイスIDがわからないと、POSTするデータを作れない。R3はデバイスIDをmDNSでマルチキャストしていて、[Windows用のクライアントアプリ](https://github.com/itead/Sonoff_Devices_DIY_Tools)もあるのだが、mac OS用のアプリはない。仕方ないので、Wiresharkで通信をのぞき見た。必要なのは、eWeLink_nnnnnnnnのnnnnnnnの部分。\n\n![Wiresharkは万能](/images/1*bVHikqIMdjbxwpeRzTi6Cg.png)\n\nIPアドレス、ポート、デバイスIDの3つがわかれば、curlでHTTP POSTを送るだけで電源On/Offができる。\n\n```\n$ curl -X POST -d '{\"deviceid\":\"100090380b\",\"data\":{\"switch\":\"off\"}}' http://192.168.mm.nn:8081/zeroconf/switch</a>\n```\n\n```\n{\"seq\":2,\"error\":0}\n```\n\n毎晩curlするのもめんどいので、OnとOffのボタンがあるだけのAndroidとiOSのアプリを作った。\n\n### スマートでセキュアでプライベートなホーム\n\nこうしてベッドサイドランプを手元のスマホでOn/Offできるようになった。ボイスコントロールとかもやろうと思えばAndroid/iOSそれぞれのアプリ内でできるだろうし、謎のなんちゃらCloudにデバイスやアカウントを登録しない、自宅LAN内で完結したプライベート スマート ホームになった…気がする。R3はhttpしか話さないのだが、自宅の無線ネットワークに入られない限りはまあ大丈夫かなと。\n\n電源On/Offできればそれでよいタイプの家電製品を操作するならSonoff Basicはほんとに簡単だった。何かネタがあれば今後も使いたい。もっとも、Sonoff BasicはただWifiチップのESP8266とリレーを組み合わせただけなので、[ESP8266の開発ボード](https://www.amazon.co.jp/dp/B078WM1YQW/)を使えばいろいろ面白いことができるのかもしれない。\n\n","navs":{"nextPage":{"epoch":"1597531554","title":"M5StickCでベッドサイドのランプをOn/Offする","slug":"/blog/20200815-m5stickc-http"},"prevPage":{"epoch":"1578782960","title":"ニューヨークで仮免を取った","slug":"/blog/2020-01-11_--------------45d1865c8b3a"}}},"__N_SSG":true}