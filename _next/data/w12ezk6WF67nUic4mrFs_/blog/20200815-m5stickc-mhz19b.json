{"pageProps":{"frontmatter":{"slug":"/blog/20200815-m5stickc-mhz19b","date":"Sun, 16 Aug 2020 14:16:51 GMT","title":"M5StickCとMH-Z19Bで部屋の二酸化炭素を計測して記録する","epoch":"1597587411","excerpt":"MH-Z19BをM5StickCに接続して、CO2センサーのデータを読み取ってGoogle Sheetに記録するプログラムを書く。","ogImage":"/images/m5stickc-mhz19b-complete.png"},"markdownBody":"\n[前回](/blog/20200815-m5stickc-http)からの続き。\n\n## MH-Z19B\n\n![M5StickCとMH-Z19B](/images/m5stickc-mhz19b.png)\n\n[MH-Z19B](https://www.winsen-sensor.com/sensors/co2-sensor/mh-z19b.html)を[M5StickC](https://m5stack.com/collections/m5-core/products/stick-c)に接続して、CO2センサーのデータを読み取ってGoogle Sheetに記録するプログラムを書く。\n\nまずMH-Z19BについてるピンとM5StickCを接続する。MH-Z19Bに電力を供給するために、MH-Z19Bの`Vinピン`とM5StickCの`5V out`をつなぎ、MH-Z19Bの`GNDピン`とM5StickCの`GND`をつなぐ。MH-Z19BからデータをM5StickCで読み取るために、MH-Z19Bの`Txピン`とM5StickCの`G0`、MH-Z19Bの`Rxピン`とM5StickCの`G26`をつなぐ。M5StickC側のGPIOピンはなんでもいいっぽいが、つないだピン番号をコードに書く必要がある（後述）。\n\n|||\n|---|---|\n| [![MH-Z19Bのピン接続](/images/mhz19b-pins.png)](/images/mhz19b-pins.png)| [![M5StickCのピン接続](/images/m5stickc-pins.png)](/images/m5stickc-pins.png) |\n\n## MH-Z19Bのデータを読むコード\n\n接続できたらM5StickCでデータを読むコードを書く。日本語で書かれたM5StickCでMH-Z19Bを扱う記事を読むと、[UIFlowでPythonでコードを書いている例](https://kitto-yakudatsu.com/archives/7286#toc21)や[M5CloudでPythonを使う例](https://medium.com/tichise/m5stack%E3%81%A7%E5%AE%B6%E3%81%A8%E3%82%AA%E3%83%95%E3%82%A3%E3%82%B9%E3%81%AE%E4%BA%8C%E9%85%B8%E5%8C%96%E7%82%AD%E7%B4%A0%E6%BF%83%E5%BA%A6%E3%82%92%E8%A8%88%E6%B8%AC%E3%81%97%E3%81%9F-3553f7a1434d)が出てきてArduino/Cなコードが出てこなくて一瞬焦ったが、ArduinoのLibrary Managerで[MH-Z19を検索して出てくるライブラリ](https://github.com/WifWaf/MH-Z19)を`#include`して普通に使えた。\n\n実際のコードを書くときにライブラリの[examples/BasicUsage](https://github.com/WifWaf/MH-Z19/blob/master/examples/BasicUsage/BasicUsage.ino)を参考にしたんだが、M5StickCで使う場合は一部コメントアウトされている方を使う必要があったりする。別にポイントってほどのことではないが、Serial1をbeginで開くときに指定する実引数でボーレート(BAUDRATE)を9600にして、上述のTxとRxの番号を指定することで正しくデータを読み取れるようになる。この辺がサンプルコードの中では`HardwareSerial`になっていたり(`Serial1`でよい)、RX_PINとTX_PINの値が違っていたり(M5StickCではGPIO10やGPIO11へのアクセスはない)するが、まあ見ればわかるって話だと思う。[ESP32にはSerial1とSerial2っていう系統があるっていうのはこの記事で知った](https://lang-ship.com/blog/work/m5stickc-uartserial/)。\n\nソース: [https://github.com/fumiakiy/M5StickC/](https://github.com/fumiakiy/M5StickC/commit/6038aa3dbb8ade0c36a88142eef4f365a9dece8a#diff-ac3ed53726558e3635fc88015490f1bc)\n\n![CO2センサー完成。気温は高めに出る。](/images/m5stickc-mhz19b-complete.png)\n\n\n## Google Sheetに記録するコード\n\nCO2センサーのデータをSerialに出力してそれっぽいデータが取れていることが確認できたので、これをGoogle Sheetに送って記録しておくことにする。Google SheetにひもづけたApp ScriptをWeb Deployすれば勝手にHTTPのエンドポイントを作ってくれるので、下記のような単純なApp Scriptで、HTTP POSTでJSONを受け取ってGoogle Sheetに追加できる。\n\n```\nfunction writeData(ar) {\n  const d = new Date()\n  const aar = [...ar, d.getTime(), d.toLocaleString()]\n  const sheet = SpreadsheetApp.getActiveSheet();\n  sheet.insertRowBefore(1);\n  sheet.getRange(1, 1, 1, aar.length).setValues([aar])\n}\n\nfunction doPost(e) {\n  const d = e.postData.contents;\n  const j = JSON.parse(d);\n  writeData(j);\n  return ContentService.createTextOutput(\"ok\");\n}\n```\n\nこのコードをWeb DeployすればURLが割り当てられるので、それに対してM5StickCからHTTP POSTすればよい。めんどくさいので認証は省いてURLを知っていれば誰でもアクセスできるようにしちゃった。\n\nソース: [https://github.com/fumiakiy/M5StickC/](https://github.com/fumiakiy/M5StickC/commit/07fb585184442a125a88a250bdc4a14d8c23076b#diff-ac3ed53726558e3635fc88015490f1bc)\n\nあとは1日データを溜めて、グラフ化してみよう。","navs":{"nextPage":{"epoch":"1606063403","title":"Android quick settings tile that [dis]connects a Bluetooth headset","slug":"/blog/20201122-bt-toggle"},"prevPage":{"epoch":"1597587411","title":"M5StickCとMH-Z19Bで部屋の二酸化炭素を計測して記録する","slug":"/blog/20200815-m5stickc-mhz19b"}}},"__N_SSG":true}